# Generated by Django 5.1.6 on 2025-03-02 21:32

from django.db import migrations
from django.contrib.auth.hashers import make_password
import hashlib

def crear_roles(apps, schema_editor):
    rol = apps.get_model("user", "rol")
    
    try:
        rol.objects.get(Nombre="Colaborador")
    except Exception as e:
        jugador = rol.objects.create(Nombre="Colaborador")
        jugador.avatars = True
        # jugador.centro_inteligencia = True
        # jugador.social_listening = True
        # jugador.ai_listening = True
        jugador.save()
    try:
        rol.objects.get(Nombre="Administrador")
    except Exception as e:
        admin = rol.objects.create(Nombre="Administrador")
        jugador.avatars = True
        jugador.centro_inteligencia = True
        jugador.social_listening = True
        jugador.ai_listening = True
        admin.save()
    try:
        rol.objects.get(Nombre="Observador")
    except Exception as e:
        testing = rol.objects.create(Nombre="Observador")
        jugador.avatars = True
        jugador.centro_inteligencia = True
        jugador.social_listening = True
        jugador.ai_listening = True
        testing.save()
    try:
        rol.objects.get(Nombre="testing")
    except Exception as e:
        testing = rol.objects.create(Nombre="testing")
        jugador.avatars = True
        jugador.centro_inteligencia = True
        jugador.social_listening = True
        jugador.ai_listening = True
        testing.save()



# salida = hashlib.sha256(b"El Libro De Python").hexdigest()
def crear_super(apps, schema_editor):
    user = apps.get_model("user", "user")
    rol = apps.get_model("user", "rol")
    user1 =  user.objects.create(email="jhocce3022@hotmail.com",
                                    is_active=True, 
                                    is_staff=True,
							        is_superuser=True
                                    )
    user1.password= hashlib.sha256(b"123456").hexdigest()

    user1.save()
    
    user2 =  user.objects.create(email="prueba@prueba.com",
                                    is_active=True, 
                                    is_staff=True,
							        # is_superuser=True
                                    )
    user2.rol=rol.objects.get(Nombre="Administrador")
    user2.password= hashlib.sha256(b"123456").hexdigest()

    user2.save()

class Migration(migrations.Migration):

    dependencies = [
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(crear_roles, migrations.RunPython.noop),
        migrations.RunPython(crear_super, migrations.RunPython.noop),
    ]
